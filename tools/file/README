
Linux下文件描述符和打开文件之间的关系
http://blog.csdn.net/delphiwcdj/article/details/37373523

两种不同类型的同步I/O完成：
(1) synchronized I/O data integrity completion (同步I/O数据完整性)
int fdatasync(int fd);
只刷新文件数据

(2) synchronized I/O file integrity completion (同步I/O文件完整性)
int fsync(int fd);
强制刷新元数据和文件数据
等同于：调用open()函数时指定O_SYNC标志
fd = open(pathname, O_WRONLY | O_SYNC);
调用open后，每个write()调用会自动将元数据和文件数据刷新到磁盘上。

结论：
(1) 因为文件数据和元数据通常驻留在磁盘的不同区域，更新这些数据需要反复在整个磁盘上执行寻道操作。
(2) 现代磁盘驱动器均内置大型高速缓存，默认情况下，使用O_SYNC只是将数据传递到该缓存中。如果禁用磁盘上的高速缓存(使用命令 hdparm -W0)，那么O_SYNC对性能的影响将变得更为极端。
(3) 总之，如果需要强制刷新内核缓冲区，那么在设计应用程序时就应该考虑是否可以使用大尺寸的write()缓冲区，或者在调用fsync()或fdatasync()时谨慎行事，而不是在打开文件时就使用O_SYNC标志。


